#pragma once


//▼데이터 입출력 및 인게임 데이터 보유용 싱글톤
class DataCentre
{
public:
	static DataCentre& Getinstance() //마이어 방식 C++11이상 버전용 싱글톤
	{
		static DataCentre instance;
		return instance;
	}
private:
	DataCentre();		//싱글톤이라 생성자 소멸자 숨김
	~DataCentre() {};	//뉴할당 받은거 없음

//▼데이터중 오브젝트 컨테이너 파트
private:
	//▼겜오브젝트들은 키값(스트링)으로 보관됨, 그 컨테이너를 오브젝트 타입에 따라 관리
	std::map <ObjType, std::map<std::string, class GameObject*>> objContainer;

public:
	void Init();
	void Update();
	void Release();
	void Render();


	//▼게임 오브젝트 관련
	void ClearObjects(ObjType _toClear);
	void AddObj(ObjType _type, std::string _name, class GameObject* _obj);
	void RemoveObj(ObjType _type, std::string _name, GameObject* _obj);
	GameObject* GetCertainObject(ObjType _type, std::string _name);
	std::map<std::string, GameObject*> & GetObjects(ObjType _type);

	//▼세이브로드관련
	HRESULT SavetoFile();
	HRESULT LoadFromFile();
};

